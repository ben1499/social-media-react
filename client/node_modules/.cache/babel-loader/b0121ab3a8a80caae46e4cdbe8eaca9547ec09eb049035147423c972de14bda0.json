{"ast":null,"code":"var _jsxFileName = \"/home/reuben/Social Media App/client/src/scenes/loginPage/Form.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Box, Button, TextField, useMediaQuery, Typography, useTheme } from \"@mui/material\";\nimport EditOutlinedIcon from \"@mui/icons-material/EditOutlined\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react=redux\";\nimport { setLogin } from \"state\";\nimport Dropzone from \"react-dropzone\";\nimport FlexBetween from \"components/FlexBetween\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst registerSchema = yup.object().shape({\n  firsName: yup.string().required(\"required\"),\n  lastName: yup.string().required(\"required\"),\n  email: yup.string().email(\"Invalid email\").required(\"required\"),\n  password: yup.string().required(\"required\"),\n  location: yup.string().required(\"required\"),\n  occupation: yup.string().required(\"required\"),\n  picture: yup.string().required(\"required\")\n});\nconst loginSchema = yup.object().shape({\n  email: yup.string().email(\"Invalid email\").required(\"required\"),\n  password: up.string().required(\"required\")\n});\nconst initialValuesRegister = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  location: \"\",\n  occupation: \"\",\n  picture: \"\"\n};\nconst initialValuesLogin = {\n  email: \"\",\n  password: \"\"\n};\nconst Form = () => {\n  _s();\n  const [pageType, setPageType] = useState(\"login\");\n  const {\n    palette\n  } = useTheme();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isNonMobile = useMediaQuery(\"(min-width:600px)\");\n  const isLogin = pageType === \"login\";\n  const isRegister = pageType === \"register\";\n  const handleFormSubmit = async (values, onSubmitProps) => {};\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    onSubmit: handleFormSubmit,\n    initialValues: isLogin ? initialValuesLogin : initialValuesRegister,\n    validationSchema: isLogin ? loginSchema : registerSchema,\n    children: _ref => {\n      let {\n        values,\n        errors,\n        touched,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        setFieldValue,\n        resetForm\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleClick,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"grid\",\n          gap: \"30px\",\n          gridTemplateColumns: \"repeat(4, minmax(0, 1fr))\",\n          sx: {\n            \"& > div\": {\n              gridColumn: isNonMobile ? undefined : \"span 4\"\n            }\n          },\n          children: isRegister && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"First Name\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              value: values.firstName,\n              name: \"firstName\",\n              error: Boolean(touched.firstName) && Boolean(errors.firstName),\n              helperText: touched.firstName && errors.firstName,\n              sx: {\n                gridColumn: \"span 2\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Last Name\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              value: values.lastName,\n              name: \"lastName\",\n              error: Boolean(touched.lastName) && Boolean(errors.lastName),\n              helperText: touched.lastName && errors.lastName,\n              sx: {\n                gridColumn: \"span 2\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Location\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              value: values.location,\n              name: \"location\",\n              error: Boolean(touched.location) && Boolean(errors.location),\n              helperText: touched.location && errors.location,\n              sx: {\n                gridColumn: \"span 4\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Occupation\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              value: values.occupation,\n              name: \"occupation\",\n              error: Boolean(touched.occupation) && Boolean(errors.occupation),\n              helperText: touched.occupation && errors.occupation,\n              sx: {\n                gridColumn: \"span 4\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              gridColumn: \"span 4\",\n              border: `1px solid ${palette.neutral.medium}`,\n              borderRadius: \"5px\",\n              p: \"1rem\",\n              children: /*#__PURE__*/_jsxDEV(Dropzone, {\n                acceptedFiles: \".jpg,.jpeg,.png\",\n                multiple: false,\n                onDrop: acceptedFiles => setFieldValue(\"picture\", acceptedFiles[0]),\n                children: _ref2 => {\n                  let {\n                    getRootProps,\n                    getInputProps\n                  } = _ref2;\n                  return /*#__PURE__*/_jsxDEV(Box, {\n                    ...getRootProps(),\n                    border: `2px dashed ${palette.primary.main}`,\n                    p: \"1rem\",\n                    sx: {\n                      \"&:hover\": {\n                        cursor: \"pointer\"\n                      }\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      ...getInputProps()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 23\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"8DIOG0TZdtriTk986WtN4O8mFiw=\", false, function () {\n  return [useTheme, useDispatch, useNavigate, useMediaQuery];\n});\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","Box","Button","TextField","useMediaQuery","Typography","useTheme","EditOutlinedIcon","Formik","yup","useNavigate","useDispatch","setLogin","Dropzone","FlexBetween","registerSchema","object","shape","firsName","string","required","lastName","email","password","location","occupation","picture","loginSchema","up","initialValuesRegister","firstName","initialValuesLogin","Form","pageType","setPageType","palette","dispatch","navigate","isNonMobile","isLogin","isRegister","handleFormSubmit","values","onSubmitProps","errors","touched","handleBlur","handleChange","handleSubmit","setFieldValue","resetForm","handleClick","gridColumn","undefined","Boolean","neutral","medium","acceptedFiles","getRootProps","getInputProps","primary","main","cursor"],"sources":["/home/reuben/Social Media App/client/src/scenes/loginPage/Form.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport {\n  Box,\n  Button,\n  TextField,\n  useMediaQuery,\n  Typography,\n  useTheme,\n} from \"@mui/material\";\nimport EditOutlinedIcon from \"@mui/icons-material/EditOutlined\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react=redux\";\nimport { setLogin } from \"state\";\nimport Dropzone from \"react-dropzone\";\nimport FlexBetween from \"components/FlexBetween\";\n\nconst registerSchema = yup.object().shape({\n  firsName: yup.string().required(\"required\"),\n  lastName: yup.string().required(\"required\"),\n  email: yup.string().email(\"Invalid email\").required(\"required\"),\n  password: yup.string().required(\"required\"),\n  location: yup.string().required(\"required\"),\n  occupation: yup.string().required(\"required\"),\n  picture: yup.string().required(\"required\"),\n});\n\nconst loginSchema = yup.object().shape({\n  email: yup.string().email(\"Invalid email\").required(\"required\"),\n  password: up.string().required(\"required\"),\n});\n\nconst initialValuesRegister = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  location: \"\",\n  occupation: \"\",\n  picture: \"\",\n};\n\nconst initialValuesLogin = {\n  email: \"\",\n  password: \"\",\n};\n\nconst Form = () => {\n  const [pageType, setPageType] = useState(\"login\");\n  const { palette } = useTheme();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isNonMobile = useMediaQuery(\"(min-width:600px)\");\n  const isLogin = pageType === \"login\";\n  const isRegister = pageType === \"register\";\n\n  const handleFormSubmit = async (values, onSubmitProps) => {};\n\n  return (\n    <Formik\n      onSubmit={handleFormSubmit}\n      initialValues={isLogin ? initialValuesLogin : initialValuesRegister}\n      validationSchema={isLogin ? loginSchema : registerSchema}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        setFieldValue,\n        resetForm,\n      }) => (\n        <form onSubmit={handleClick}>\n          <Box\n            display=\"grid\"\n            gap=\"30px\"\n            gridTemplateColumns=\"repeat(4, minmax(0, 1fr))\"\n            sx={{\n              \"& > div\": { gridColumn: isNonMobile ? undefined : \"span 4\" },\n            }}\n          >\n            {isRegister && (\n              <>\n                <TextField\n                  label=\"First Name\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.firstName}\n                  name=\"firstName\"\n                  error={\n                    Boolean(touched.firstName) && Boolean(errors.firstName)\n                  }\n                  helperText={touched.firstName && errors.firstName}\n                  sx={{ gridColumn: \"span 2\" }}\n                />\n                <TextField\n                  label=\"Last Name\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.lastName}\n                  name=\"lastName\"\n                  error={Boolean(touched.lastName) && Boolean(errors.lastName)}\n                  helperText={touched.lastName && errors.lastName}\n                  sx={{ gridColumn: \"span 2\" }}\n                />\n                <TextField\n                  label=\"Location\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.location}\n                  name=\"location\"\n                  error={Boolean(touched.location) && Boolean(errors.location)}\n                  helperText={touched.location && errors.location}\n                  sx={{ gridColumn: \"span 4\" }}\n                />\n                <TextField\n                  label=\"Occupation\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.occupation}\n                  name=\"occupation\"\n                  error={\n                    Boolean(touched.occupation) && Boolean(errors.occupation)\n                  }\n                  helperText={touched.occupation && errors.occupation}\n                  sx={{ gridColumn: \"span 4\" }}\n                />\n                <Box\n                  gridColumn=\"span 4\"\n                  border={`1px solid ${palette.neutral.medium}`}\n                  borderRadius=\"5px\"\n                  p=\"1rem\"\n                >\n                  <Dropzone\n                    acceptedFiles=\".jpg,.jpeg,.png\"\n                    multiple={false}\n                    onDrop={(acceptedFiles) =>\n                      setFieldValue(\"picture\", acceptedFiles[0])\n                    }\n                  >\n                    {({ getRootProps, getInputProps }) => (\n                      <Box\n                        {...getRootProps()}\n                        border={`2px dashed ${palette.primary.main}`}\n                        p=\"1rem\"\n                        sx={{ \"&:hover\": { cursor: \"pointer\" } }}\n                      >\n                        <input {...getInputProps()} />\n                      </Box>\n                    )}\n                  </Dropzone>\n                </Box>\n              </>\n            )}\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SACEC,GAAG,EACHC,MAAM,EACNC,SAAS,EACTC,aAAa,EACbC,UAAU,EACVC,QAAQ,QACH,eAAe;AACtB,OAAOC,gBAAgB,MAAM,kCAAkC;AAC/D,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,WAAW,MAAM,wBAAwB;AAAC;AAAA;AAEjD,MAAMC,cAAc,GAAGN,GAAG,CAACO,MAAM,EAAE,CAACC,KAAK,CAAC;EACxCC,QAAQ,EAAET,GAAG,CAACU,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU,CAAC;EAC3CC,QAAQ,EAAEZ,GAAG,CAACU,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU,CAAC;EAC3CE,KAAK,EAAEb,GAAG,CAACU,MAAM,EAAE,CAACG,KAAK,CAAC,eAAe,CAAC,CAACF,QAAQ,CAAC,UAAU,CAAC;EAC/DG,QAAQ,EAAEd,GAAG,CAACU,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU,CAAC;EAC3CI,QAAQ,EAAEf,GAAG,CAACU,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU,CAAC;EAC3CK,UAAU,EAAEhB,GAAG,CAACU,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU,CAAC;EAC7CM,OAAO,EAAEjB,GAAG,CAACU,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU;AAC3C,CAAC,CAAC;AAEF,MAAMO,WAAW,GAAGlB,GAAG,CAACO,MAAM,EAAE,CAACC,KAAK,CAAC;EACrCK,KAAK,EAAEb,GAAG,CAACU,MAAM,EAAE,CAACG,KAAK,CAAC,eAAe,CAAC,CAACF,QAAQ,CAAC,UAAU,CAAC;EAC/DG,QAAQ,EAAEK,EAAE,CAACT,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU;AAC3C,CAAC,CAAC;AAEF,MAAMS,qBAAqB,GAAG;EAC5BC,SAAS,EAAE,EAAE;EACbT,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE,EAAE;EACZC,UAAU,EAAE,EAAE;EACdC,OAAO,EAAE;AACX,CAAC;AAED,MAAMK,kBAAkB,GAAG;EACzBT,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMS,IAAI,GAAG,MAAM;EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlC,QAAQ,CAAC,OAAO,CAAC;EACjD,MAAM;IAAEmC;EAAQ,CAAC,GAAG7B,QAAQ,EAAE;EAC9B,MAAM8B,QAAQ,GAAGzB,WAAW,EAAE;EAC9B,MAAM0B,QAAQ,GAAG3B,WAAW,EAAE;EAC9B,MAAM4B,WAAW,GAAGlC,aAAa,CAAC,mBAAmB,CAAC;EACtD,MAAMmC,OAAO,GAAGN,QAAQ,KAAK,OAAO;EACpC,MAAMO,UAAU,GAAGP,QAAQ,KAAK,UAAU;EAE1C,MAAMQ,gBAAgB,GAAG,OAAOC,MAAM,EAAEC,aAAa,KAAK,CAAC,CAAC;EAE5D,oBACE,QAAC,MAAM;IACL,QAAQ,EAAEF,gBAAiB;IAC3B,aAAa,EAAEF,OAAO,GAAGR,kBAAkB,GAAGF,qBAAsB;IACpE,gBAAgB,EAAEU,OAAO,GAAGZ,WAAW,GAAGZ,cAAe;IAAA,UAExD;MAAA,IAAC;QACA2B,MAAM;QACNE,MAAM;QACNC,OAAO;QACPC,UAAU;QACVC,YAAY;QACZC,YAAY;QACZC,aAAa;QACbC;MACF,CAAC;MAAA,oBACC;QAAM,QAAQ,EAAEC,WAAY;QAAA,uBAC1B,QAAC,GAAG;UACF,OAAO,EAAC,MAAM;UACd,GAAG,EAAC,MAAM;UACV,mBAAmB,EAAC,2BAA2B;UAC/C,EAAE,EAAE;YACF,SAAS,EAAE;cAAEC,UAAU,EAAEd,WAAW,GAAGe,SAAS,GAAG;YAAS;UAC9D,CAAE;UAAA,UAEDb,UAAU,iBACT;YAAA,wBACE,QAAC,SAAS;cACR,KAAK,EAAC,YAAY;cAClB,MAAM,EAAEM,UAAW;cACnB,QAAQ,EAAEC,YAAa;cACvB,KAAK,EAAEL,MAAM,CAACZ,SAAU;cACxB,IAAI,EAAC,WAAW;cAChB,KAAK,EACHwB,OAAO,CAACT,OAAO,CAACf,SAAS,CAAC,IAAIwB,OAAO,CAACV,MAAM,CAACd,SAAS,CACvD;cACD,UAAU,EAAEe,OAAO,CAACf,SAAS,IAAIc,MAAM,CAACd,SAAU;cAClD,EAAE,EAAE;gBAAEsB,UAAU,EAAE;cAAS;YAAE;cAAA;cAAA;cAAA;YAAA,QAC7B,eACF,QAAC,SAAS;cACR,KAAK,EAAC,WAAW;cACjB,MAAM,EAAEN,UAAW;cACnB,QAAQ,EAAEC,YAAa;cACvB,KAAK,EAAEL,MAAM,CAACrB,QAAS;cACvB,IAAI,EAAC,UAAU;cACf,KAAK,EAAEiC,OAAO,CAACT,OAAO,CAACxB,QAAQ,CAAC,IAAIiC,OAAO,CAACV,MAAM,CAACvB,QAAQ,CAAE;cAC7D,UAAU,EAAEwB,OAAO,CAACxB,QAAQ,IAAIuB,MAAM,CAACvB,QAAS;cAChD,EAAE,EAAE;gBAAE+B,UAAU,EAAE;cAAS;YAAE;cAAA;cAAA;cAAA;YAAA,QAC7B,eACF,QAAC,SAAS;cACR,KAAK,EAAC,UAAU;cAChB,MAAM,EAAEN,UAAW;cACnB,QAAQ,EAAEC,YAAa;cACvB,KAAK,EAAEL,MAAM,CAAClB,QAAS;cACvB,IAAI,EAAC,UAAU;cACf,KAAK,EAAE8B,OAAO,CAACT,OAAO,CAACrB,QAAQ,CAAC,IAAI8B,OAAO,CAACV,MAAM,CAACpB,QAAQ,CAAE;cAC7D,UAAU,EAAEqB,OAAO,CAACrB,QAAQ,IAAIoB,MAAM,CAACpB,QAAS;cAChD,EAAE,EAAE;gBAAE4B,UAAU,EAAE;cAAS;YAAE;cAAA;cAAA;cAAA;YAAA,QAC7B,eACF,QAAC,SAAS;cACR,KAAK,EAAC,YAAY;cAClB,MAAM,EAAEN,UAAW;cACnB,QAAQ,EAAEC,YAAa;cACvB,KAAK,EAAEL,MAAM,CAACjB,UAAW;cACzB,IAAI,EAAC,YAAY;cACjB,KAAK,EACH6B,OAAO,CAACT,OAAO,CAACpB,UAAU,CAAC,IAAI6B,OAAO,CAACV,MAAM,CAACnB,UAAU,CACzD;cACD,UAAU,EAAEoB,OAAO,CAACpB,UAAU,IAAImB,MAAM,CAACnB,UAAW;cACpD,EAAE,EAAE;gBAAE2B,UAAU,EAAE;cAAS;YAAE;cAAA;cAAA;cAAA;YAAA,QAC7B,eACF,QAAC,GAAG;cACF,UAAU,EAAC,QAAQ;cACnB,MAAM,EAAG,aAAYjB,OAAO,CAACoB,OAAO,CAACC,MAAO,EAAE;cAC9C,YAAY,EAAC,KAAK;cAClB,CAAC,EAAC,MAAM;cAAA,uBAER,QAAC,QAAQ;gBACP,aAAa,EAAC,iBAAiB;gBAC/B,QAAQ,EAAE,KAAM;gBAChB,MAAM,EAAGC,aAAa,IACpBR,aAAa,CAAC,SAAS,EAAEQ,aAAa,CAAC,CAAC,CAAC,CAC1C;gBAAA,UAEA;kBAAA,IAAC;oBAAEC,YAAY;oBAAEC;kBAAc,CAAC;kBAAA,oBAC/B,QAAC,GAAG;oBAAA,GACED,YAAY,EAAE;oBAClB,MAAM,EAAG,cAAavB,OAAO,CAACyB,OAAO,CAACC,IAAK,EAAE;oBAC7C,CAAC,EAAC,MAAM;oBACR,EAAE,EAAE;sBAAE,SAAS,EAAE;wBAAEC,MAAM,EAAE;sBAAU;oBAAE,CAAE;oBAAA,uBAEzC;sBAAA,GAAWH,aAAa;oBAAE;sBAAA;sBAAA;sBAAA;oBAAA;kBAAI;oBAAA;oBAAA;oBAAA;kBAAA,QAC1B;gBAAA;cACP;gBAAA;gBAAA;gBAAA;cAAA;YACQ;cAAA;cAAA;cAAA;YAAA,QACP;UAAA;QAET;UAAA;UAAA;UAAA;QAAA;MACG;QAAA;QAAA;QAAA;MAAA,QACD;IAAA;EACR;IAAA;IAAA;IAAA;EAAA,QACM;AAEb,CAAC;AAAC,GAlHI3B,IAAI;EAAA,QAEY1B,QAAQ,EACXK,WAAW,EACXD,WAAW,EACRN,aAAa;AAAA;AAAA,KAL7B4B,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}